from flask import Flask, request
import requests

app = Flask(__name__)

BITRIX_WEBHOOK = 'https://esprings.bitrix24.ru/rest/1/5s5gfz64192lxuyz'

@app.route('/fields', methods=['GET'])
def get_fields():
    response = requests.get(f'{BITRIX_WEBHOOK}/crm.deal.fields')
    fields = response.json().get('result', {})

    result_lines = []
    for code, info in fields.items():
        if code.startswith("UF_CRM"):
            label = info.get('listLabel') or info.get('formLabel') or info.get('editFormLabel') or "‚Äî"
            result_lines.append(f"{code}: {label}")
    
    result_text = "\n".join(result_lines)
    print("üìã –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –ø–æ–ª–µ–π:\n" + result_text)
    return f"<pre>{result_text}</pre>"

@app.route('/', methods=['POST'])
def wazzup_webhook():
    data = request.json
    print("üì¨ –í–µ–±—Ö—É–∫ –æ—Ç Wazzup:", data)

    try:
        if 'messages' not in data:
            print("‚ö†Ô∏è –ù–µ—Ç –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π ‚Äî –≤–æ–∑–º–æ–∂–Ω–æ —Å—Ç–∞—Ç—É—Å –∏–ª–∏ echo")
            return '', 200

        message = data['messages'][0]
        if message.get('status') != 'inbound':
            print("‚û°Ô∏è –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –≤—Ö–æ–¥—è—â–µ–µ, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º")
            return '', 200

        phone = message.get('chatId', '')
        print("üìû –ü–æ–ª—É—á–µ–Ω –Ω–æ–º–µ—Ä:", phone)

        if phone.startswith("7"):
            phone = phone[1:]
        last_10 = phone[-10:]
        print("üìû –ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Ü–∏—Ñ—Ä –Ω–æ–º–µ—Ä–∞:", last_10)

        contact_search = requests.post(f'{BITRIX_WEBHOOK}/crm.contact.list', json={
            "filter": {"*PHONE": last_10},
            "select": ["ID", "PHONE"],
            "start": 0
        })

        contacts = contact_search.json().get('result', [])
        print(f"üì¶ –ü–æ–ª—É—á–µ–Ω–æ {len(contacts)} –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤")
        if not contacts:
            print("‚ùå –ö–æ–Ω—Ç–∞–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return '', 200

        contact_id = contacts[0]['ID']
        print(f"‚úÖ –ö–æ–Ω—Ç–∞–∫—Ç –Ω–∞–π–¥–µ–Ω: {contact_id}")

    except Exception as e:
        print("‚ùó –û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ:", str(e))

    return '', 200

if __name__ == '__main__':
    app.run(debug=True)
