from flask import Flask, request
import requests
from datetime import datetime

app = Flask(__name__)

# –¢–≤–æ–π Bitrix24 –≤–µ–±—Ö—É–∫
BITRIX_WEBHOOK = 'https://esprings.bitrix24.ru/rest/1/5s5gfz64192lxuyz'
FIELD_CODE = 'UF_CRM_1743763731661'

@app.route('/', methods=['POST'])
def wazzup_webhook():
    data = request.json
    print("üì¨ –í–µ–±—Ö—É–∫ –æ—Ç Wazzup:", data)

    try:
        message = data['messages'][0]
        if message['status'] != 'inbound':
            print("‚û°Ô∏è –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –≤—Ö–æ–¥—è—â–µ–µ, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º")
            return '', 200

        phone = message['chatId']
        print("üìû –ü–æ–ª—É—á–µ–Ω –Ω–æ–º–µ—Ä:", phone)

        # –£–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤—É—é —Ü–∏—Ñ—Ä—É "7", –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å
        if phone.startswith("7"):
            phone = phone[1:]

        # –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Ü–∏—Ñ—Ä
        last_10_digits = phone[-10:]

        # –ü–æ–∏—Å–∫ –∫–æ–Ω—Ç–∞–∫—Ç–∞ –ø–æ –Ω–æ–º–µ—Ä—É
        contact_search_url = f'{BITRIX_WEBHOOK}/crm.contact.list'
        search_response = requests.post(contact_search_url, json={
            "filter": {
                "*PHONE": last_10_digits  # –ò—â–µ–º –ø–æ –ª—é–±–æ–º—É —Ç–∏–ø—É –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
            },
            "select": ["ID", "PHONE"]
        })

        print("üîç –û—Ç–≤–µ—Ç –Ω–∞ –ø–æ–∏—Å–∫ –∫–æ–Ω—Ç–∞–∫—Ç–∞:", search_response.text)
        contact_result = search_response.json()

        if not contact_result.get('result'):
            print("‚ùå –ö–æ–Ω—Ç–∞–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return '', 200

        contact_id = None
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã
        for contact in contact_result.get('result', []):
            phones = contact.get('PHONE', [])
            for phone_entry in phones:
                if last_10_digits in phone_entry.get('VALUE', ''):
                    contact_id = contact['ID']
                    print("‚úÖ –ö–æ–Ω—Ç–∞–∫—Ç –Ω–∞–π–¥–µ–Ω:", contact_id)
                    break
            if contact_id:
                break

        if not contact_id:
            print("‚ùå –ö–æ–Ω—Ç–∞–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return '', 200

        # –ò—â–µ–º —Å–¥–µ–ª–∫—É –ø–æ –∫–æ–Ω—Ç–∞–∫—Ç—É
        deal_search_url = f'{BITRIX_WEBHOOK}/crm.deal.list'
        deal_response = requests.post(deal_search_url, json={
            "filter": {
                "CONTACT_ID": contact_id
            },
            "select": ["ID"]
        })

        print("üîç –û—Ç–≤–µ—Ç –Ω–∞ –ø–æ–∏—Å–∫ —Å–¥–µ–ª–∫–∏:", deal_response.text)
        deal_result = deal_response.json().get('result', [])
        if not deal_result:
            print("‚ùå –°–¥–µ–ª–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            return '', 200

        # –í–æ–∑—å–º–µ–º –ø–µ—Ä–≤—É—é —Å–¥–µ–ª–∫—É –∏–∑ —Å–ø–∏—Å–∫–∞
        deal_id = deal_result[0]['ID']
        print("‚úÖ –°–¥–µ–ª–∫–∞ –Ω–∞–π–¥–µ–Ω–∞:", deal_id)

        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–¥–µ–ª–∫—É
        now = datetime.now().strftime('%Y-%m-%d')
        update_url = f'{BITRIX_WEBHOOK}/crm.deal.update'
        update_response = requests.post(update_url, json={
            "id": deal_id,
            "fields": {
                FIELD_CODE: now
            }
        })

        print("üìù –û—Ç–≤–µ—Ç –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–¥–µ–ª–∫–∏:", update_response.text)

    except Exception as e:
        print("‚ùó –û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ:", str(e))

    return '', 200

if __name__ == '__main__':
    app.run(debug=True)
