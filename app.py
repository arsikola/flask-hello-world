from flask import Flask, request 
import requests
from datetime import datetime
import re
import time

app = Flask(__name__)

# –¢–≤–æ–π Bitrix24 –≤–µ–±—Ö—É–∫
BITRIX_WEBHOOK = 'https://esprings.bitrix24.ru/rest/1/5s5gfz64192lxuyz'
FIELD_CODE = 'UF_CRM_1743763731661'

# –§—É–Ω–∫—Ü–∏—è –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
def normalize_phone(phone):
    return re.sub(r'\D', '', phone)[-10:]

@app.route('/', methods=['POST'])
def wazzup_webhook():
    data = request.json
    print("üì¨ –í–µ–±—Ö—É–∫ –æ—Ç Wazzup:", data)

    try:
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –≤—Ö–æ–¥—è—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        if 'messages' not in data or not data['messages']:
            print("‚ö†Ô∏è –ù–µ—Ç –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π ‚Äî –≤–æ–∑–º–æ–∂–Ω–æ —Å—Ç–∞—Ç—É—Å –∏–ª–∏ echo")
            return '', 200

        message = data['messages'][0]
        if message.get('status') != 'inbound':
            print("‚û°Ô∏è –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –≤—Ö–æ–¥—è—â–µ–µ, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º")
            return '', 200

        phone = message['chatId']
        print("üìû –ü–æ–ª—É—á–µ–Ω –Ω–æ–º–µ—Ä:", phone)

        if phone.startswith("7"):
            phone = phone[1:]

        last_10_digits = normalize_phone(phone)
        print(f"üìû –ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Ü–∏—Ñ—Ä –Ω–æ–º–µ—Ä–∞: {last_10_digits}")

        # –ü–æ–∏—Å–∫ –∫–æ–Ω—Ç–∞–∫—Ç–∞ –ø–æ –≤—Å–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º
        contact_id = None
        start = 0
        while True:
            try:
                contact_search_url = f'{BITRIX_WEBHOOK}/crm.contact.list'
                response = requests.post(contact_search_url, json={
                    "select": ["ID", "PHONE"],
                    "filter": {
                        "!PHONE": ""
                    },
                    "start": start
                }, timeout=15)
            except requests.exceptions.RequestException as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ Bitrix (–∫–æ–Ω—Ç–∞–∫—Ç—ã): {e}")
                return '', 500

            result = response.json()
            contacts = result.get('result', [])
            if not contacts:
                break

            for contact in contacts:
                phones = contact.get('PHONE', [])
                for phone_entry in phones:
                    stored_number = normalize_phone(phone_entry['VALUE'])
                    if stored_number == last_10_digits:
                        contact_id = contact['ID']
                        print(f"‚úÖ –ö–æ–Ω—Ç–∞–∫—Ç –Ω–∞–π–¥–µ–Ω: {contact_id}")
                        break
                if contact_id:
                    break

            if contact_id or 'next' not in result:
                break

            start = result['next']
            time.sleep(0.3)  # üí° –ü–∞—É–∑–∞ –º–µ–∂–¥—É —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏

        if not contact_id:
            print("‚ùå –ö–æ–Ω—Ç–∞–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return '', 200

        # –ü–æ–∏—Å–∫ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–¥–µ–ª–æ–∫
        try:
            deal_search_url = f'{BITRIX_WEBHOOK}/crm.deal.list'
            deal_response = requests.post(deal_search_url, json={
                "filter": {
                    "CONTACT_ID": contact_id,
                    "!STAGE_SEMANTIC_ID": "F"  # –ò—Å–∫–ª—é—á–∞–µ–º –∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã–µ
                },
                "select": ["ID", "DATE_CREATE"],
                "order": {
                    "DATE_CREATE": "DESC"
                }
            }, timeout=15)
        except requests.exceptions.RequestException as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ Bitrix (—Å–¥–µ–ª–∫–∏): {e}")
            return '', 500

        deal_result = deal_response.json().get('result', [])
        if not deal_result:
            print("‚ùå –ê–∫—Ç–∏–≤–Ω—ã–µ —Å–¥–µ–ª–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            return '', 200

        deal_id = deal_result[0]['ID']
        print(f"‚úÖ –ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–∞—è —Å–¥–µ–ª–∫–∞ –Ω–∞–π–¥–µ–Ω–∞: {deal_id}")

        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–¥–µ–ª–∫—É
        now = datetime.now().strftime('%Y-%m-%d')
        try:
            update_url = f'{BITRIX_WEBHOOK}/crm.deal.update'
            update_response = requests.post(update_url, json={
                "id": deal_id,
                "fields": {
                    FIELD_CODE: now
                }
            }, timeout=15)

            print("üìù –û—Ç–≤–µ—Ç –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–¥–µ–ª–∫–∏:", update_response.text)
        except requests.exceptions.RequestException as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–¥–µ–ª–∫–∏: {e}")
            return '', 500

    except Exception as e:
        print("‚ùó –û–±—â–∞—è –æ—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏:", str(e))
        return '', 500

    return '', 200

if __name__ == '__main__':
    app.run(debug=True)
