from flask import Flask, request
import requests
from datetime import datetime
import re

app = Flask(__name__)

BITRIX_WEBHOOK = 'https://esprings.bitrix24.ru/rest/1/5s5gfz64192lxuyz'
FIELD_CODE = 'UF_CRM_1743763731661'

def normalize_phone(phone):
    return re.sub(r'\D', '', phone)[-10:]

@app.route('/', methods=['POST'])
def wazzup_webhook():
    data = request.json
    print("üì¨ –í–µ–±—Ö—É–∫ –æ—Ç Wazzup:", data)

    try:
        message = data['messages'][0]
        if message.get('status') != 'inbound':
            print("‚û°Ô∏è –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –≤—Ö–æ–¥—è—â–µ–µ, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º")
            return '', 200

        phone = message.get('chatId', '')
        print("üìû –ü–æ–ª—É—á–µ–Ω –Ω–æ–º–µ—Ä:", phone)

        if phone.startswith("7"):
            phone = phone[1:]

        last_10_digits = normalize_phone(phone)
        print(f"üìû –ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Ü–∏—Ñ—Ä –Ω–æ–º–µ—Ä–∞: {last_10_digits}")

        # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—ã–µ 50 –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ (–ø–æ–∫–∞ –±–µ–∑ start)
        contact_search_url = f'{BITRIX_WEBHOOK}/crm.contact.list'
        search_response = requests.post(contact_search_url, json={
            "select": ["ID", "PHONE"],
            "filter": {"!PHONE": ""}
        })

        contact_result = search_response.json()
        contacts = contact_result.get('result', [])
        print(f"üì¶ –ü–æ–ª—É—á–µ–Ω–æ {len(contacts)} –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤")

        contact_id = None

        # –ü–æ–∏—Å–∫ –Ω–æ–º–µ—Ä–∞ –≤—Ä—É—á–Ω—É—é
        for contact in contacts:
            for phone_entry in contact.get('PHONE', []):
                stored = normalize_phone(phone_entry.get('VALUE', ''))
                if stored == last_10_digits:
                    contact_id = contact['ID']
                    print(f"‚úÖ –ö–æ–Ω—Ç–∞–∫—Ç –Ω–∞–π–¥–µ–Ω: {contact_id}")
                    break
            if contact_id:
                break

        if not contact_id:
            print("‚ùå –ö–æ–Ω—Ç–∞–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return '', 200

        # –ò—â–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Å–¥–µ–ª–∫—É
        deal_search_url = f'{BITRIX_WEBHOOK}/crm.deal.list'
        deal_response = requests.post(deal_search_url, json={
            "filter": {
                "CONTACT_ID": contact_id
            },
            "select": ["ID", "DATE_CREATE"],
            "order": {
                "DATE_CREATE": "DESC"
            }
        })

        deals = deal_response.json().get('result', [])
        if not deals:
            print("‚ùå –°–¥–µ–ª–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            return '', 200

        deal_id = deals[0]['ID']
        print(f"‚úÖ –°–¥–µ–ª–∫–∞ –Ω–∞–π–¥–µ–Ω–∞: {deal_id}")

        # –û–±–Ω–æ–≤–ª—è–µ–º –¢–û–õ–¨–ö–û –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ –ø–æ–ª–µ
        now = datetime.now().strftime('%Y-%m-%d')
        update_url = f'{BITRIX_WEBHOOK}/crm.deal.update'
        update_response = requests.post(update_url, json={
            "id": deal_id,
            "fields": {
                FIELD_CODE: now
            }
        })

        print("üõ° –û–±–Ω–æ–≤–ª–µ–Ω–æ —Ç–æ–ª—å–∫–æ –ø–æ–ª–µ:", update_response.text)

    except Exception as e:
        print("‚ùó –û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ:", str(e))

    return '', 200

if __name__ == '__main__':
    app.run(debug=True)
