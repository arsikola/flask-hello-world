from flask import Flask, request
import requests
from datetime import datetime
import os

app = Flask(__name__)

WEBHOOK_SECRET = os.getenv("WEBHOOK_SECRET")
BITRIX_WEBHOOK_URL = os.getenv("BITRIX_WEBHOOK_URL")
FIELD_CODE = 'UF_CRM_1743763731661'  # –î–∞—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ—Ç–≤–µ—Ç–∞ –∫–ª–∏–µ–Ω—Ç–∞

@app.route("/", methods=["POST"])
def wazzup_webhook():
    data = request.get_json()

    try:
        if "messages" not in data:
            print("‚ùó –û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ: 'messages'")
            return "", 200

        for message in data["messages"]:
            if message.get("isEcho"):
                print("‚û°Ô∏è –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –≤—Ö–æ–¥—è—â–µ–µ, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º")
                continue

            phone_raw = message["chatId"]
            print(f"üìû –ü–æ–ª—É—á–µ–Ω –Ω–æ–º–µ—Ä: {phone_raw}")
            phone = phone_raw[-10:]
            print(f"üìû –ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Ü–∏—Ñ—Ä –Ω–æ–º–µ—Ä–∞: {phone}")

            # –ü–æ–∏—Å–∫ –∫–æ–Ω—Ç–∞–∫—Ç–∞ –ø–æ –Ω–æ–º–µ—Ä—É
            contact_filter = {
                "filter": {
                    "PHONE": [{"VALUE": phone}]
                },
                "select": ["ID"]
            }
            contact_url = f"{BITRIX_WEBHOOK_URL}/crm.contact.list.json"
            contact_resp = requests.post(contact_url, json=contact_filter).json()

            print(f"üîç –û—Ç–≤–µ—Ç –Ω–∞ –ø–æ–∏—Å–∫ –∫–æ–Ω—Ç–∞–∫—Ç–∞: {contact_resp}")

            if "result" not in contact_resp or not contact_resp["result"]:
                print("‚ùå –ö–æ–Ω—Ç–∞–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return "", 200

            contact_id = contact_resp["result"][0]["ID"]
            print(f"‚úÖ –ö–æ–Ω—Ç–∞–∫—Ç –Ω–∞–π–¥–µ–Ω: {contact_id}")

            # –ü–æ–∏—Å–∫ —Å–¥–µ–ª–æ–∫ –∫–æ–Ω—Ç–∞–∫—Ç–∞
            deals_filter = {
                "filter": {"CONTACT_ID": contact_id},
                "select": ["ID", "STAGE_ID", "TITLE", FIELD_CODE],
                "order": {"ID": "DESC"}
            }
            deals_url = f"{BITRIX_WEBHOOK_URL}/crm.deal.list.json"
            deals_resp = requests.post(deals_url, json=deals_filter).json()

            print(f"üì¶ –ù–∞–π–¥–µ–Ω–æ —Å–¥–µ–ª–æ–∫: {len(deals_resp.get('result', []))}")
            if not deals_resp.get("result"):
                print("‚ùå –°–¥–µ–ª–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                return "", 200

            deal_id = deals_resp["result"][0]["ID"]
            print(f"‚úÖ –°–¥–µ–ª–∫–∞ –Ω–∞–π–¥–µ–Ω–∞: {deal_id}")

            # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª—è "–î–∞—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ—Ç–≤–µ—Ç–∞ –∫–ª–∏–µ–Ω—Ç–∞"
            today = datetime.now().strftime("%Y-%m-%d")
            update_url = f"{BITRIX_WEBHOOK_URL}/crm.deal.update.json"
            update_data = {
                "id": deal_id,
                "fields": {
                    FIELD_CODE: today
                }
            }
            print(f"üõ† –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª–µ {FIELD_CODE} –Ω–∞ –∑–Ω–∞—á–µ–Ω–∏–µ {today}")
            update_resp = requests.post(update_url, json=update_data).json()
            print(f"üõ° –°–¥–µ–ª–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞: {update_resp}")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

    return "", 200
