from flask import Flask, request
import requests
from datetime import datetime

app = Flask(__name__)

# –¢–≤–æ–π Bitrix24 –≤–µ–±—Ö—É–∫
BITRIX_WEBHOOK = 'https://esprings.bitrix24.ru/rest/1/5s5gfz64192lxuyz'
FIELD_CODE = 'UF_CRM_1743763731661'

@app.route('/', methods=['POST'])
def wazzup_webhook():
    data = request.json
    print("üì¨ –í–µ–±—Ö—É–∫ –æ—Ç Wazzup:", data)

    try:
        message = data['messages'][0]
        if message['status'] != 'inbound':
            print("‚û°Ô∏è –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –≤—Ö–æ–¥—è—â–µ–µ, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º")
            return '', 200

        phone = message['chatId']
        print("üìû –ü–æ–ª—É—á–µ–Ω –Ω–æ–º–µ—Ä:", phone)

        # –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Ü–∏—Ñ—Ä
        last_10_digits = phone[-10:]

        # –ü–æ–∏—Å–∫ –∫–æ–Ω—Ç–∞–∫—Ç–∞ –ø–æ –Ω–æ–º–µ—Ä—É
        contact_search_url = f'{BITRIX_WEBHOOK}/crm.contact.list'
        search_response = requests.post(contact_search_url, json={
            "filter": {
                "*PHONE": last_10_digits
            },
            "select": ["ID"]
        })

        print("üîç –û—Ç–≤–µ—Ç –Ω–∞ –ø–æ–∏—Å–∫ –∫–æ–Ω—Ç–∞–∫—Ç–∞:", search_response.text)
        contact_result = search_response.json()

        if not contact_result.get('result'):
            print("‚ùå –ö–æ–Ω—Ç–∞–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return '', 200

        # –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤—ã–≤–∞–µ–º –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞
        contact_id = None
        for contact in contact_result.get('result', []):
            contact_id = contact['ID']
            # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Å–∞–º –∫–æ–Ω—Ç–∞–∫—Ç –ø–æ ID, —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–æ–º–µ—Ä
            contact_data_url = f'{BITRIX_WEBHOOK}/crm.contact.get'
            contact_data = requests.post(contact_data_url, json={"id": contact_id}).json()
            phones = contact_data.get('result', {}).get('PHONE', [])
            for phone_entry in phones:
                if last_10_digits in phone_entry.get('VALUE', ''):
                    print("‚úÖ –ö–æ–Ω—Ç–∞–∫—Ç –Ω–∞–π–¥–µ–Ω:", contact_id)
                    break
            else:
                continue  # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –Ω–æ–º–µ—Ä ‚Äî –∏—â–µ–º –¥–∞–ª—å—à–µ
            break  # –ö–æ–Ω—Ç–∞–∫—Ç –Ω–∞–π–¥–µ–Ω, –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ü–∏–∫–ª–∞

        if not contact_id:
            print("‚ùå –ö–æ–Ω—Ç–∞–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return '', 200

        # –ò—â–µ–º —Å–¥–µ–ª–∫—É –ø–æ –∫–æ–Ω—Ç–∞–∫—Ç—É
        deal_search_url = f'{BITRIX_WEBHOOK}/crm.deal.list'
        deal_response = requests.post(deal_search_url, json={
            "filter": {
                "CONTACT_ID": contact_id,
                "CLOSED": "N"  # –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –æ—Ç–∫—Ä—ã—Ç—ã–µ —Å–¥–µ–ª–∫–∏
            },
            "select": ["ID"]
        })

        print("üîç –û—Ç–≤–µ—Ç –Ω–∞ –ø–æ–∏—Å–∫ —Å–¥–µ–ª–∫–∏:", deal_response.text)
        deal_result = deal_response.json().get('result', [])
        if not deal_result:
            print("‚ùå –°–¥–µ–ª–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            return '', 200

        deal_id = deal_result[0]['ID']
        print("‚úÖ –°–¥–µ–ª–∫–∞ –Ω–∞–π–¥–µ–Ω–∞:", deal_id)

        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–¥–µ–ª–∫—É
        now = datetime.now().strftime('%Y-%m-%d')
        update_url = f'{BITRIX_WEBHOOK}/crm.deal.update'
        update_response = requests.post(update_url, json={
            "id": deal_id,
            "fields": {
                FIELD_CODE: now
            }
        })

        print("üìù –û—Ç–≤–µ—Ç –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–¥–µ–ª–∫–∏:", update_response.text)

    except Exception as e:
        print("‚ùó –û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ:", str(e))

    return '', 200

@app.route('/', methods=['GET'])
def index():
    return '–°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç! ‚úÖ', 200
