import os
from flask import Flask, request
import requests
from datetime import datetime

app = Flask(__name__)

# –í—Å—Ç–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫–∏ –Ω–∞ –≤–µ–±—Ö—É–∫–∏
WEBHOOK_URL_CONTACTS = "https://esprings.bitrix24.ru/rest/1/yrad0suj5361davr/"
WEBHOOK_URL_DEALS = "https://esprings.bitrix24.ru/rest/1/ii7i0pazh2ky1nlg/"

# –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã –ø–æ–ª–µ–π
OUR_LAST_MESSAGE_DATE_FIELD = "UF_CRM_1743763719781"  # –î–∞—Ç–∞ –Ω–∞—à–µ–≥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
CLIENT_LAST_REPLY_DATE_FIELD = "UF_CRM_1743763731661"  # –î–∞—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ—Ç–≤–µ—Ç–∞ –∫–ª–∏–µ–Ω—Ç–∞

# –°—Ç–∞–¥–∏–∏
TARGET_STAGE = "3"  # ID —Å—Ç–∞–¥–∏–∏ "–ë–µ–∑ –æ—Ç–≤–µ—Ç–∞"
CURRENT_STAGE = "PREPARATION"  # –¢–µ–∫—É—â–∞—è —Å—Ç–∞–¥–∏—è —Å–¥–µ–ª–∫–∏ ("–°—Ç–æ–∏–º–æ—Å—Ç—å –æ–∑–≤—É—á–µ–Ω–∞")

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –≤—Ä–µ–º–µ–Ω–∏
DAYS_LIMIT_AFTER_MESSAGE = 10  # –°–∫–æ–ª—å–∫–æ –¥–Ω–µ–π –∂–¥–∞—Ç—å –æ—Ç–≤–µ—Ç–∞ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞

@app.route("/", methods=["POST"])
def wazzup_webhook():
    data = request.json
    print(f"üì¨ –í–µ–±—Ö—É–∫ –æ—Ç Wazzup: {data}")

    if "messages" not in data:
        print("‚ùó –û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ: 'messages'")
        return "OK", 200

    message = data["messages"][0]
    if message.get("isEcho") or message.get("status") != "inbound":
        print("‚û°Ô∏è –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –≤—Ö–æ–¥—è—â–µ–µ, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º")
        return "OK", 200

    phone_raw = message.get("chatId")
    print(f"üìû –ü–æ–ª—É—á–µ–Ω –Ω–æ–º–µ—Ä: {phone_raw}")

    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –Ω–æ–º–µ—Ä–∞
    phone_tail = phone_raw[-10:]
    variants = [
        f"+7{phone_tail}",
        f"+7({phone_tail[:3]}){phone_tail[3:6]}-{phone_tail[6:8]}-{phone_tail[8:]}",
        f"+7 {phone_tail[:3]} {phone_tail[3:6]} {phone_tail[6:8]} {phone_tail[8:]}",
        f"+7-{phone_tail[:3]}-{phone_tail[3:6]}-{phone_tail[6:8]}-{phone_tail[8:]}"
    ]
    print(f"üìû –§–æ—Ä–º–∞—Ç—ã –Ω–æ–º–µ—Ä–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞: {variants}")

    # –ü–æ–∏—Å–∫ –∫–æ–Ω—Ç–∞–∫—Ç–∞
    contact_id = None
    for variant in variants:
        contact_filter = {
            "filter": {"PHONE": variant},
            "select": ["ID", "PHONE"]
        }
        contact_resp = requests.post(f"{WEBHOOK_URL_CONTACTS}crm.contact.list.json", json=contact_filter).json()
        print(f"üîç –û—Ç–≤–µ—Ç –Ω–∞ –ø–æ–∏—Å–∫ –∫–æ–Ω—Ç–∞–∫—Ç–∞ –ø–æ {variant}: {contact_resp}")

        result = contact_resp.get("result", [])
        for contact in result:
            phones = contact.get("PHONE", [])
            for phone in phones:
                if phone.get("VALUE") == variant:
                    contact_id = contact["ID"]
                    break
            if contact_id:
                break
        if contact_id:
            break

    if not contact_id:
        print("‚ùå –ö–æ–Ω—Ç–∞–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return "OK", 200

    print(f"‚úÖ –ö–æ–Ω—Ç–∞–∫—Ç –Ω–∞–π–¥–µ–Ω: {contact_id}")

    # –ü–æ–∏—Å–∫ —Å–¥–µ–ª–æ–∫ –≤ —Å—Ç–∞–¥–∏–∏ CURRENT_STAGE
    deals_resp = requests.post(f"{WEBHOOK_URL_DEALS}crm.deal.list.json", json={
        "filter": {"CONTACT_ID": contact_id, "STAGE_ID": CURRENT_STAGE},
        "select": ["ID", "STAGE_ID", OUR_LAST_MESSAGE_DATE_FIELD, CLIENT_LAST_REPLY_DATE_FIELD],
        "order": {"ID": "DESC"}
    }).json()

    deals = deals_resp.get("result", [])
    print(f"üì¶ –ù–∞–π–¥–µ–Ω–æ —Å–¥–µ–ª–æ–∫ –≤ —Å—Ç–∞–¥–∏–∏ '{CURRENT_STAGE}': {len(deals)}")

    if not deals:
        print("‚ùå –°–¥–µ–ª–∫–∏ –≤ –Ω—É–∂–Ω–æ–π —Å—Ç–∞–¥–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        return "OK", 200

    today = datetime.today().strftime("%Y-%m-%d")
    print(f"üïë –¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞: {today}")

    for deal in deals:
        deal_id = deal["ID"]
        print(f"‚úÖ –†–∞–±–æ—Ç–∞–µ–º —Å–æ —Å–¥–µ–ª–∫–æ–π: {deal_id}")

        # 1Ô∏è‚É£ –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞—Ç—É –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ—Ç–≤–µ—Ç–∞ –∫–ª–∏–µ–Ω—Ç–∞
        update_resp = requests.post(f"{WEBHOOK_URL_DEALS}crm.deal.update.json", json={
            "id": deal_id,
            "fields": {
                CLIENT_LAST_REPLY_DATE_FIELD: today
            }
        }).json()
        print(f"üõ° –û–±–Ω–æ–≤–∏–ª–∏ –¥–∞—Ç—É –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ—Ç–≤–µ—Ç–∞ –∫–ª–∏–µ–Ω—Ç–∞ –¥–ª—è —Å–¥–µ–ª–∫–∏ {deal_id}: {update_resp}")

        # 2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º: –ø—Ä–æ—à–ª–æ –ª–∏ 10 –¥–Ω–µ–π –±–µ–∑ –æ—Ç–≤–µ—Ç–∞ –∫–ª–∏–µ–Ω—Ç–∞
        last_message_date_str = deal.get(OUR_LAST_MESSAGE_DATE_FIELD)
        if not last_message_date_str:
            print(f"‚ö†Ô∏è –ù–µ—Ç –¥–∞—Ç—ã –Ω–∞—à–µ–≥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Å–¥–µ–ª–∫–∏ {deal_id}")
            continue

        try:
            last_message_date = datetime.strptime(last_message_date_str, "%Y-%m-%d")
        except ValueError:
            print(f"‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã –≤ –ø–æ–ª–µ OUR_LAST_MESSAGE_DATE_FIELD –¥–ª—è —Å–¥–µ–ª–∫–∏ {deal_id}")
            continue

        days_passed = (datetime.today() - last_message_date).days
        print(f"üìÖ –ü—Ä–æ—à–ª–æ –¥–Ω–µ–π —Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {days_passed}")

        if days_passed >= DAYS_LIMIT_AFTER_MESSAGE:
            print(f"üîî –ü–µ—Ä–µ–≤–æ–¥–∏–º —Å–¥–µ–ª–∫—É {deal_id} –≤ —Å—Ç–∞–¥–∏—é '–ë–µ–∑ –æ—Ç–≤–µ—Ç–∞'")

            move_resp = requests.post(f"{WEBHOOK_URL_DEALS}crm.deal.update.json", json={
                "id": deal_id,
                "fields": {
                    "STAGE_ID": TARGET_STAGE
                }
            }).json()
            print(f"‚úÖ –°–¥–µ–ª–∫–∞ {deal_id} –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–∞ –≤ —Å—Ç–∞–¥–∏—é '–ë–µ–∑ –æ—Ç–≤–µ—Ç–∞': {move_resp}")

    return "OK", 200

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 10000)))
