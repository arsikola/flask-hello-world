import os
from flask import Flask, request
import requests
from datetime import datetime

app = Flask(__name__)

# –ü–æ–ª—É—á–∞–µ–º URL –≤–µ–±—Ö—É–∫–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
BITRIX_WEBHOOK_URL = os.getenv("BITRIX_WEBHOOK_URL")
FIELD_CODE = "UF_CRM_1743763731661"  # –î–∞—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ—Ç–≤–µ—Ç–∞ –∫–ª–∏–µ–Ω—Ç–∞

@app.route("/", methods=["POST"])
def wazzup_webhook():
    data = request.get_json()
    print(f"üì¨ –í–µ–±—Ö—É–∫ –æ—Ç Wazzup: {data}")

    if "messages" not in data:
        print("‚ùó –û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ: 'messages'")
        return "", 200

    message = data["messages"][0]

    if message.get("isEcho") or message.get("status") != "inbound":
        print("‚û°Ô∏è –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –≤—Ö–æ–¥—è—â–µ–µ, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º")
        return "", 200

    phone_raw = message["chatId"]
    print(f"üìû –ü–æ–ª—É—á–µ–Ω –Ω–æ–º–µ—Ä: {phone_raw}")

    # üîç –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ—á–Ω—ã–π –Ω–æ–º–µ—Ä —Å +7
    if not phone_raw.startswith("+"):
        phone_full = "+7" + phone_raw[-10:]
    else:
        phone_full = phone_raw
    print(f"üìû –¢–æ—á–Ω—ã–π –Ω–æ–º–µ—Ä –¥–ª—è –ø–æ–∏—Å–∫–∞: {phone_full}")

    # –ü–æ–∏—Å–∫ –∫–æ–Ω—Ç–∞–∫—Ç–∞ –ø–æ —Ç–æ—á–Ω–æ–º—É –Ω–æ–º–µ—Ä—É
    contact_url = f"{BITRIX_WEBHOOK_URL}/crm.contact.list.json"
    contact_filter = {
        "filter": {
            "=PHONE": phone_full
        },
        "select": ["ID", "PHONE"]
    }
    contact_resp = requests.post(contact_url, json=contact_filter).json()
    print(f"üîç –û—Ç–≤–µ—Ç –Ω–∞ –ø–æ–∏—Å–∫ –∫–æ–Ω—Ç–∞–∫—Ç–∞: {contact_resp}")

    contact_id = None
    for contact in contact_resp.get("result", []):
        for phone in contact.get("PHONE", []):
            phone_cleaned = phone["VALUE"].replace("(", "").replace(")", "").replace("-", "").replace(" ", "")
            if phone_cleaned == phone_full:
                contact_id = contact["ID"]
                break
        if contact_id:
            break

    if not contact_id:
        print("‚ùå –ö–æ–Ω—Ç–∞–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return "", 200

    print(f"‚úÖ –ö–æ–Ω—Ç–∞–∫—Ç –Ω–∞–π–¥–µ–Ω: {contact_id}")

    # –ü–æ–∏—Å–∫ —Å–¥–µ–ª–æ–∫ –ø–æ –∫–æ–Ω—Ç–∞–∫—Ç—É
    deal_url = f"{BITRIX_WEBHOOK_URL}/crm.deal.list.json"
    deal_filter = {
        "filter": {
            "CONTACT_ID": contact_id
        },
        "select": ["ID"]
    }
    deal_resp = requests.post(deal_url, json=deal_filter).json()
    deals = deal_resp.get("result", [])
    print(f"üì¶ –ù–∞–π–¥–µ–Ω–æ —Å–¥–µ–ª–æ–∫: {len(deals)}")

    if not deals:
        print("‚ùå –°–¥–µ–ª–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        return "", 200

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–∞–º—É—é –Ω–æ–≤—É—é (–ø–æ ID)
    latest_deal = sorted(deals, key=lambda d: int(d["ID"]), reverse=True)[0]
    deal_id = latest_deal["ID"]
    print(f"‚úÖ –°–¥–µ–ª–∫–∞ –Ω–∞–π–¥–µ–Ω–∞: {deal_id}")

    # –û–±–Ω–æ–≤–ª—è–µ–º –Ω—É–∂–Ω–æ–µ –ø–æ–ª–µ –≤ —Å–¥–µ–ª–∫–µ
    update_url = f"{BITRIX_WEBHOOK_URL}/crm.deal.update.json"
    today_str = datetime.now().strftime("%Y-%m-%d")
    update_payload = {
        "id": deal_id,
        "fields": {
            FIELD_CODE: today_str
        }
    }
    print(f"üõ† –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª–µ {FIELD_CODE} –Ω–∞ –∑–Ω–∞—á–µ–Ω–∏–µ {today_str}")
    update_resp = requests.post(update_url, json=update_payload).json()
    print(f"üõ° –°–¥–µ–ª–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞: {update_resp}")

    return "", 200
